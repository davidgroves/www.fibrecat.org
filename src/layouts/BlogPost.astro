---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, heroAltText, heroCredit, heroLink } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				display: block;
  				margin-left: auto;
  				margin-right: auto;
			}
			.hero-image img {
				display: block;
				margin: auto;
				border-radius: 36px;
				box-shadow: var(--box-shadow);
				max-height: 50vh;
	
				aspect-ratio: auto;
				
			}
			.hero-image-credit {
				text-align: center;
				font-size: 75%;
			}
			.prose {
				width: 90%;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
				font-size: 12pt;
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
				font-size: 32pt;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			.h1 {
				font-size: 16pt;
			}
			blockquote {
				background: #f9f9f9;
				border-left: 10px solid #ccc;
				margin: 1.5em 10px;
				padding: 0.5em 10px;
				quotes: "\201C""\201D""\2018""\2019";
			}
			blockquote:before {
				color: #ccc;
				content: open-quote;
				font-size: 4em;
				line-height: 0.1em;
				margin-right: 0.25em;
				vertical-align: -0.4em;
			}
			blockquote p {
				display: inline;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<div class="hero-image">
						<img src={heroImage} alt={heroAltText} />
					</div>
					<div class="hero-image-credit">
						<a href={heroLink}>Image by {heroCredit}</a>
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>

	<script>
		let copyButtonLabel = "Copy Code";
		let codeBlocks = Array.from(document.querySelectorAll("pre"));
	  
		for (let codeBlock of codeBlocks) {
		  let wrapper = document.createElement("div");
		  wrapper.style.position = "relative";
	  
		  let copyButton = document.createElement("button");
		  copyButton.className = "copy-code";
		  copyButton.innerHTML = copyButtonLabel;
	  
		  codeBlock.setAttribute("tabindex", "0");
		  codeBlock.appendChild(copyButton);
		  // wrap codebock with relative parent element
		  codeBlock.parentNode.insertBefore(wrapper, codeBlock);
		  wrapper.appendChild(codeBlock);
	  
		  copyButton.addEventListener("click", async () => {
			await copyCode(codeBlock, copyButton);
		  });
		}
	  
		async function copyCode(block, button) {
		  let code = block.querySelector("code");
		  let text = code.innerText;
	  
		  await navigator.clipboard.writeText(text);
	  
		  // visual feedback that task is completed
		  button.innerText = "Code Copied";
	  
		  setTimeout(() => {
			button.innerText = copyButtonLabel;
		  }, 700);
		}
	  </script>
	  
	  <slot />
</html>
